{
  "name": "animate.css",
  "version": "3.1.1",
  "author": {
    "name": "daneden",
    "email": "dan.eden@me.com"
  },
  "description": "A cross-browser library of CSS animations. As easy to use as an easy thing.",
  "css": [
    "animate.css"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:cortex-packages/animate.css.git"
  },
  "keywords": [
    "css",
    "animate"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/cortex-packages/animate.css/issues"
  },
  "homepage": "https://github.com/cortex-packages/animate.css",
  "readme": "#Animate.css\n*Just-add-water CSS animation*\n\n`animate.css` is a bunch of cool, fun, and cross-browser animations for you to use in your projects. Great for emphasis, home pages, sliders, and general just-add-water-awesomeness.\n\n##Usage\nTo use animate.css in your website, simply drop the stylesheet into your document's `<head>`, and add the class `animated` to an element, along with any of the animation names. That's it! You've got a CSS animated element. Super!\n\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"animate.min.css\">\n</head>\n```\n\nYou can do a whole bunch of other stuff with animate.css when you combine it with jQuery or add your own CSS rules. Dynamically add animations using jQuery with ease:\n\n```javascript\n$('#yourElement').addClass('animated bounceOutLeft');\n```\n\nYou can also detect when an animation ends:\n\n<!--\nBefore you make changes to this file, you should know that $('#yourElement').one() is *NOT A TYPO*\n\nhttp://api.jquery.com/one/\n-->\n\n```javascript\n$('#yourElement').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', doSomething);\n```\n\n**Note:** `jQuery#one` is used when you want to execute the event handler at most *once*. More information [here](http://api.jquery.com/one/).\n\nYou can change the duration of your animations, add a delay or change the number of times that it plays:\n\n```css\n#yourElement {\n  -vendor-animation-duration: 3s;\n  -vendor-animation-delay: 2s;\n  -vendor-animation-iteration-count: infinite;\n}\n```\n\n*Note: be sure to replace \"vendor\" in the CSS with the applicable vendor prefixes (webkit, moz, etc)*\n\n## Custom Builds\nAnimate.css is powered by [Grunt](http://gruntjs.com), and you can create custom builds pretty easily. First of all, you’ll need Grunt and all other dependencies:\n\n```sh\n$ cd path/to/animate.css/\n$ sudo npm install\n```\n\nNext, run `grunt watch` to watch for changes and compile your custom builds. For example, if you want only some of the the “attention seekers”, simply edit the `animate-config.json` file to select only the animations you want to use.\n\n```javascript\n\"attention_seekers\": {\n  \"bounce\": true,\n  \"flash\": false,\n  \"pulse\": false,\n  \"shake\": true,\n  \"swing\": true,\n  \"tada\": true,\n  \"wobble\": true\n}\n```\n\n## License\nAnimate.css is licensed under the MIT license. (http://opensource.org/licenses/MIT)\n\n## Contributing\nPull requests are the way to go here. I apologise in advance for the slow action on pull requests and issues. I only have two rules for submitting a pull request: match the naming convention (camelCase, categorised [fades, bounces, etc]) and let us see a demo of submitted animations in a [pen](http://codepen.io). That last one is important.\n",
  "readmeFilename": "README.md",
  "gitHead": "96f7fd5d0ef652854693b2d8af5dab37d1cfba68",
  "_id": "animate.css@3.1.1",
  "main": false,
  "entries": []
}